{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a9071175d786dfe01bc6","webpack:///web-integrate-utils.js","webpack:///./src/index.js","webpack:///./src/utils/type/index.js","webpack:///./src/utils/email/index.js","webpack:///./src/utils/phone/index.js","webpack:///./src/utils/string/index.js","webpack:///./src/utils/string/prototype.js","webpack:///./src/utils/array/index.js","webpack:///./src/utils/array/prototype.js","webpack:///./src/utils/number/index.js","webpack:///./src/utils/number/prototype.js","webpack:///./src/utils/date/index.js","webpack:///./src/utils/check/index.js","webpack:///./src/utils/url/index.js","webpack:///./src/utils/loadScript.js"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","moduleId","installedModules","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","value","loadScript","url","check","date","number","array","string","phone","email","type","undefined","_index2","_index","_index4","_index3","_index6","_index5","_index8","_index7","_index10","_index9","_index12","_index11","_index14","_index13","_index16","_index15","_index18","_index17","_loadScript2","_loadScript","isString","toString","slice","isNumber","isBoolean","isFunction","isNull","isUndefined","isObject","isArray","isDate","isRegExp","isError","isSymbol","isPromise","isSet","isBeing","isTrue","isFalse","getClientType","u","navigator","userAgent","indexOf","isIos","isAndroid","isWinPhone","isPC","userAgentInfo","Agents","flag","v","length","getBrowserType","isOpera","isIE","isIE11","isEdge","isFF","isSafari","isChrome","RegExp","test","fIEVersion","parseFloat","REGEXS","EMAIL_PATTERN","isEmail","input","CHINA_TELECOM_PATTERN","CHINA_UNICOM_PATTERN","CHINA_MOBILE_PATTERN","FIXED_TEL_PATTERN","PHONE_PATTERN","PHONE_SIMPLE_PATTERN","isPhoneCallNum","isChinaTelecomPhone","isChinaUnicomPhone","isChinaMobilePhone","isPhone","isPhoneNumBySize","isEmpty","isBlank","isEquals","input1","input2","isEqualsIgnoreCase","toLocaleLowerCase","isContains","searchSeq","isEnWords","isEnSpace","isEnNumber","isEnNumberSpace","isChinese","trimSpace","replace","filterTag","removeChinese","removeBlank","firstToUppercase","matchStr","toLocaleUpperCase","firstToLowerCase","toogleSwapCase","reverse","split","join","escapeMetacharacter","escapeMetacharacterOfStr","chineseToUnicode","charCodeAt","removeSpecialCharacter","String","getBytes","len","str","bytesCount","sliceBytesStr","isOverstep","charAt","byte","getMaxValue","arr","Math","max","apply","getMinValue","min","isInclude","ele","_toConsumableArray","Array","arr2","from","delete","splice","arguments","appendBefore","appendAfter","unique","container","result","index","element","push","sortByKey","key","isAscending","_this","Set","j","Number","temp","error","console","log","flatten","stack","res","next","pop","flattenTree","paramArr","newArray","flatKey","formatTree","callback","format","param","map","item","loopKey","nodeKey","setValueByKey","objData","keyArr","valueArr","JSON","stringify","forEach","resultValue","shuffle","randomIndex","floor","random","storageItem","isNumeric","isDecimal","isNegativeDecimal","isPositiveDecimal","isInteger","isPositiveInteger","isNegativeInteger","factorial","num","parseInt","timestampFormat","zero","timestamp","Date","now","formats","myDate","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minite","getMinutes","second","getSeconds","matches","Y","M","D","H","I","S","isLeapYear","getDaysOfMonth","dayOfTheYear","days","daysArr","getZoneNameValue","dateObj","UTC","match","AllSpecialString","SpecialString","password","code","drivingLicense","EnString","EnNumber","CnString","CnNumber","RegisterNumber","CarNo","PersonNo","checkString","checkAge","checkTextArea","checkNumber","checkPassword","checkCode","checkPhone","checkCName","checkEnString","checkEnNumber","checkCnString","checkCnNumber","checkRegisterNumber","checkUrl","checkCarNo","checkPersonCount","checkDrivingLicense","URL_PATTERN","PARAMS_PATTERN","isUrl","urlTransformParams","params","exec","urlEncode","window","encodeURIComponent","urlDecode","parse","decodeURIComponent","hasCallback","removeScript","scriptElement","document","body","removeChild","createElement","appendChild","promise","Promise","resolve","reject","addEventListener","e","____callback____","src"],"mappings":"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","file":"web-integrate-utils.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"web-integrate-utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"web-integrate-utils\"] = factory();\n\telse\n\t\troot[\"web-integrate-utils\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a9071175d786dfe01bc6","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"web-integrate-utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"web-integrate-utils\"] = factory();\n\telse\n\t\troot[\"web-integrate-utils\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadScript = exports.url = exports.check = exports.date = exports.number = exports.array = exports.string = exports.phone = exports.email = exports.type = undefined;\n\nvar _index = __webpack_require__(1);\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = __webpack_require__(2);\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = __webpack_require__(3);\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _index7 = __webpack_require__(4);\n\nvar _index8 = _interopRequireDefault(_index7);\n\nvar _index9 = __webpack_require__(6);\n\nvar _index10 = _interopRequireDefault(_index9);\n\nvar _index11 = __webpack_require__(8);\n\nvar _index12 = _interopRequireDefault(_index11);\n\nvar _index13 = __webpack_require__(10);\n\nvar _index14 = _interopRequireDefault(_index13);\n\nvar _index15 = __webpack_require__(11);\n\nvar _index16 = _interopRequireDefault(_index15);\n\nvar _index17 = __webpack_require__(12);\n\nvar _index18 = _interopRequireDefault(_index17);\n\nvar _loadScript = __webpack_require__(13);\n\nvar _loadScript2 = _interopRequireDefault(_loadScript);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:55:08 \n * @Last Modified by: houzhiqiag\n * @Last Modified time: 2019-10-23 15:28:12\n */\n\nexports.type = _index2.default;\nexports.email = _index4.default;\nexports.phone = _index6.default;\nexports.string = _index8.default;\nexports.array = _index10.default;\nexports.number = _index12.default;\nexports.date = _index14.default;\nexports.check = _index16.default;\nexports.url = _index18.default;\nexports.loadScript = _loadScript2.default;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  // 是否字符串\n  isString: function isString(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'String';\n  },\n\n  // 是否数字\n  isNumber: function isNumber(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Number';\n  },\n\n  // 是否boolean\n  isBoolean: function isBoolean(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Boolean';\n  },\n\n  // 是否函数\n  isFunction: function isFunction(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Function';\n  },\n\n  // 是否为null\n  isNull: function isNull(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Null';\n  },\n\n  // 是否undefined\n  isUndefined: function isUndefined(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Undefined';\n  },\n\n  // 是否对象\n  isObject: function isObject(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n  },\n\n  // 是否数组\n  isArray: function isArray(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Array';\n  },\n\n  // 是否时间\n  isDate: function isDate(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Date';\n  },\n\n  // 是否正则\n  isRegExp: function isRegExp(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'RegExp';\n  },\n\n  // 是否错误对象\n  isError: function isError(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Error';\n  },\n\n  // 是否Symbol函数\n  isSymbol: function isSymbol(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Symbol';\n  },\n\n  // 是否Promise对象\n  isPromise: function isPromise(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Promise';\n  },\n\n  //是否Set对象\n  isSet: function isSet(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Set';\n  },\n\n  // 值是否存在\n  isBeing: function isBeing(o) {\n    if (!o || o === 'null' || o === 'undefined' || o === 'false' || o === 'NaN') return false;\n    return true;\n  },\n  isTrue: function isTrue(o) {\n    return !this.isFalse(o);\n  },\n  getClientType: function getClientType() {\n    var u = navigator.userAgent;\n    if (u.indexOf('Android') > -1 || u.indexOf('Linux') > -1) {\n      // 安卓手机\n      return \"Android\";\n    } else if (u.indexOf('iPhone') > -1) {\n      // 苹果手机\n      return \"iPhone\";\n    } else if (u.indexOf('iPad') > -1) {\n      // iPad\n      return \"iPad\";\n    } else if (u.indexOf('Windows Phone') > -1) {\n      // winphone手机\n      return \"Windows Phone\";\n    } else {\n      return \"other\";\n    }\n  },\n  isIos: function isIos() {\n    return this.getClientType === \"iPhone\" || this.getClientType === \"iPad\";\n  },\n  isAndroid: function isAndroid() {\n    return this.getClientType === \"iPhone\";\n  },\n  isWinPhone: function isWinPhone() {\n    return this.getClientType === \"Windows Phone\";\n  },\n\n  // 是否为PC端\n  isPC: function isPC() {\n    var userAgentInfo = navigator.userAgent;\n    var Agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n    var flag = true;\n    for (var v = 0; v < Agents.length; v++) {\n      if (userAgentInfo.indexOf(Agents[v]) > 0) {\n        flag = false;\n        break;\n      }\n    }\n    return flag;\n  },\n  getBrowserType: function getBrowserType() {\n    var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串\n    var isOpera = userAgent.indexOf(\"Opera\") > -1; //判断是否Opera浏览器\n    var isIE = userAgent.indexOf(\"compatible\") > -1 && userAgent.indexOf(\"MSIE\") > -1 && !isOpera; //判断是否IE浏览器\n    var isIE11 = userAgent.indexOf('Trident') > -1 && userAgent.indexOf(\"rv:11.0\") > -1;\n    var isEdge = userAgent.indexOf(\"Edge\") > -1 && !isIE; //判断是否IE的Edge浏览器  \n    var isFF = userAgent.indexOf(\"Firefox\") > -1; //判断是否Firefox浏览器\n    var isSafari = userAgent.indexOf(\"Safari\") > -1 && userAgent.indexOf(\"Chrome\") == -1; //判断是否Safari浏览器\n    var isChrome = userAgent.indexOf(\"Chrome\") > -1 && userAgent.indexOf(\"Safari\") > -1; //判断Chrome浏览器\n\n    if (isIE) {\n      var reIE = new RegExp(\"MSIE (\\\\d+\\\\.\\\\d+);\");\n      reIE.test(userAgent);\n      var fIEVersion = parseFloat(RegExp[\"$1\"]);\n      if (fIEVersion == 7) return \"IE7\";else if (fIEVersion == 8) return \"IE8\";else if (fIEVersion == 9) return \"IE9\";else if (fIEVersion == 10) return \"IE10\";else return \"IE7以下\"; //IE版本过低\n    }\n    if (isIE11) return 'IE11';\n    if (isEdge) return \"Edge\";\n    if (isFF) return \"FF\";\n    if (isOpera) return \"Opera\";\n    if (isSafari) return \"Safari\";\n    if (isChrome) return \"Chrome\";\n  }\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  REGEXS: {\n    EMAIL_PATTERN: /^[-\\w\\+]+(?:\\.[-\\w]+)*@[-a-z0-9]+(?:\\.[a-z0-9]+)*(?:\\.[a-z]{2,})$/i\n  },\n  //邮箱格式校验\n  isEmail: function isEmail(input) {\n    return this.REGEXS.EMAIL_PATTERN.test(input);\n  }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:54:51 \n * @Last Modified by:   houzhiqiag \n * @Last Modified time: 2019-10-23 10:54:51 \n */\n\nexports.default = {\n  REGEXS: {\n    //中国电信号码段\t\t\t \n    CHINA_TELECOM_PATTERN: /^(?:\\+86)?1(?:33|53|7[37]|8[019])\\d{8}$|^(?:\\+86)?1700\\d{7}$/,\n    //中国联通号码段\n    CHINA_UNICOM_PATTERN: /^(?:\\+86)?1(?:3[0-2]|4[5]|5[56]|7[56]|8[56])\\d{8}$|^(?:\\+86)?170[7-9]\\d{7}$/,\n    //中国移动号码段\n    CHINA_MOBILE_PATTERN: /^(?:\\+86)?1(?:3[4-9]|4[7]|5[0-27-9]|7[8]|8[2-478])\\d{8}$|^(?:\\+86)?1705\\d{7}$/,\n    //电话座机号码段\n    FIXED_TEL_PATTERN: /^(?:\\(\\d{3,4}\\)|\\d{3,4}-)?\\d{7,8}(?:-\\d{1,4})?$/,\n    //手机号码\n    PHONE_PATTERN: /^(?:\\+86)?(?:13\\d|14[57]|15[0-35-9]|17[35-8]|18\\d)\\d{8}$|^(?:\\+86)?170[057-9]\\d{7}$/,\n    //手机号简单校验，不根据运营商分类\n    PHONE_SIMPLE_PATTERN: /^(?:\\+86)?1\\d{10}$/\n  },\n  //固定电话\n  isPhoneCallNum: function isPhoneCallNum(input) {\n    return this.REGEXS.FIXED_TEL_PATTERN.test(input);\n  },\n\n  //电信手机号码\n  isChinaTelecomPhone: function isChinaTelecomPhone(input) {\n    return this.REGEXS.CHINA_TELECOM_PATTERN.test(input);\n  },\n\n  //中国联通\n  isChinaUnicomPhone: function isChinaUnicomPhone(input) {\n    return this.REGEXS.CHINA_UNICOM_PATTERN.test(input);\n  },\n\n  //中国移动\n  isChinaMobilePhone: function isChinaMobilePhone(input) {\n    return this.REGEXS.CHINA_MOBILE_PATTERN.test(input);\n  },\n\n  //手机号码\n  isPhone: function isPhone(input) {\n    return this.REGEXS.PHONE_PATTERN.test(input);\n  },\n\n  //手机号码简单校验，只校验长度\n  isPhoneNumBySize: function isPhoneNumBySize(input) {\n    return this.REGEXS.PHONE_SIMPLE_PATTERN.test(input);\n  }\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\n__webpack_require__(5);\n\nexports.default = {\n\t// 字符串是否为空\n\tisEmpty: function isEmpty(input) {\n\t\treturn input === null || input === '';\n\t},\n\n\t// 字符串是否存在非空字符\n\tisBlank: function isBlank(input) {\n\t\treturn input === null || /^\\s*$/.test(input);\n\t},\n\n\t// 字符串是否完全相等\n\tisEquals: function isEquals(input1, input2) {\n\t\treturn input1 === input2;\n\t},\n\n\t// 字符串忽略大小写是否相等\n\tisEqualsIgnoreCase: function isEqualsIgnoreCase(input1, input2) {\n\t\treturn input1.toLocaleLowerCase() == input2.toLocaleLowerCase();\n\t},\n\n\t// 字符串是否包含\n\tisContains: function isContains(input, searchSeq) {\n\t\treturn input.indexOf(searchSeq) >= 0;\n\t},\n\n\t// 是否为英文\n\tisEnWords: function isEnWords(input) {\n\t\treturn (/^[a-z]+$/i.test(input)\n\t\t);\n\t},\n\n\t//只包含字母、空格\n\tisEnSpace: function isEnSpace(input) {\n\t\treturn (/^[a-z\\s]*$/i.test(input)\n\t\t);\n\t},\n\n\t//只包含字母、数字\n\tisEnNumber: function isEnNumber(input) {\n\t\treturn (/^[a-z0-9]+$/i.test(input)\n\t\t);\n\t},\n\n\t//只包含字母、数字和空格\n\tisEnNumberSpace: function isEnNumberSpace(input) {\n\t\treturn (/^[a-z0-9\\s]*$/i.test(input)\n\t\t);\n\t},\n\n\t// 是否为中文\n\tisChinese: function isChinese(input) {\n\t\treturn (/^[\\u4E00-\\u9FA5]+$/.test(input)\n\t\t);\n\t},\n\n\t// 去除空格\n\ttrimSpace: function trimSpace(input) {\n\t\treturn input.replace(/\\s+/g, \"\");\n\t},\n\n\t// 过滤字符串中特殊字符&、<、>\n\tfilterTag: function filterTag(input) {\n\t\tinput = input.replace(/&/ig, \"&amp;\");\n\t\tinput = input.replace(/</ig, \"&lt;\");\n\t\tinput = input.replace(/>/ig, \"&gt;\");\n\t\tinput = input.replace(\" \", \"&nbsp;\");\n\t\treturn input;\n\t},\n\n\t//去掉中文字符\n\tremoveChinese: function removeChinese(input) {\n\t\treturn input.replace(/[\\u4E00-\\u9FA5]+/gm, \"\");\n\t},\n\n\t// 移除字符串内空白字符\n\tremoveBlank: function removeBlank(input) {\n\t\treturn input.replace(/\\s+/g, '');\n\t},\n\n\t//首字母大写\n\tfirstToUppercase: function firstToUppercase(input) {\n\t\tif (input === null || input.length === 0) {\n\t\t\treturn input;\n\t\t}\n\t\treturn input.replace(/^[a-z]/, function (matchStr) {\n\t\t\treturn matchStr.toLocaleUpperCase();\n\t\t});\n\t},\n\n\t//首字母小写\n\tfirstToLowerCase: function firstToLowerCase(input) {\n\t\tif (input === null || input.length === 0) {\n\t\t\treturn input;\n\t\t}\n\t\treturn input.replace(/^[A-Z]/, function (matchStr) {\n\t\t\treturn matchStr.toLocaleUpperCase();\n\t\t});\n\t},\n\n\t// 大小写互转\n\ttoogleSwapCase: function toogleSwapCase(input) {\n\t\treturn input.replace(/[a-z]/ig, function (matchStr) {\n\t\t\tif (matchStr >= 'A' && matchStr <= 'Z') {\n\t\t\t\treturn matchStr.toLocaleLowerCase();\n\t\t\t} else if (matchStr >= 'a' && matchStr <= 'z') {\n\t\t\t\treturn matchStr.toLocaleUpperCase();\n\t\t\t}\n\t\t});\n\t},\n\n\t//字符串反转\n\treverse: function reverse(input) {\n\t\tif (this.isBlank(input)) {\n\t\t\tinput;\n\t\t}\n\t\treturn input.split(\"\").reverse().join(\"\");\n\t},\n\n\t//转义元字符\n\tescapeMetacharacter: function escapeMetacharacter(input) {\n\t\tvar metacharacter = \"^$()*+.[]|\\\\-?{}\";\n\t\tif (metacharacter.indexOf(input) >= 0) {\n\t\t\tinput = \"\\\\\" + input;\n\t\t}\n\t\treturn input;\n\t},\n\n\t//转义字符串中的元字符\n\tescapeMetacharacterOfStr: function escapeMetacharacterOfStr(input) {\n\t\treturn input.replace(/[-$^()*+.\\[\\]|\\\\?{}]/gm, \"\\\\$&\");\n\t},\n\n\t//中文转为unicode编码\n\tchineseToUnicode: function chineseToUnicode(input) {\n\t\treturn input.replace(/[\\u4E00-\\u9FA5]/g, function (matchStr) {\n\t\t\treturn '\\\\u' + matchStr.charCodeAt(0).toString(16);\n\t\t});\n\t},\n\n\n\t//英文状态下移除特殊字符\n\tremoveSpecialCharacter: function removeSpecialCharacter(input) {\n\t\treturn input.replace(/[!-/:-@\\[-`{-~]/g, \"\");\n\t}\n}; /*\n    * @Author: houzhiqiag \n    * @Date: 2019-10-23 10:54:42 \n    * @Last Modified by: houzhiqiag\n    * @Last Modified time: 2019-10-23 14:57:38\n    */\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*\n * @Author: houzhiqiag \n * @Date: 2019-10-14 16:05:18 \n * @Last Modified by: houzhiqiag\n * @Last Modified time: 2019-10-22 17:14:46\n */\n\n/**\n* 获取字符串的字节数，根据传入字节长度进行截取，扩展string类型方法\n* @method getBytes\n* @for 字符串方法\n* @param {len, str} len 所需截取字节长度, str超出所替换的字符串\n* @return {String/NUmber}}} 传入len时，返回字节长度为len的字符串，不传如len时返回该字符串的字符长度\n* 当所截取最后一位字符为中文时，会保留该字符\n*/\nString.prototype.getBytes = function () {\n  var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var str = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  var bytesCount = 0;\n  var sliceBytesStr = \"\";\n  var isOverstep = false;\n\n  if (this != null) {\n    for (var i = 0; i < this.length; i++) {\n      var c = this.charAt(i);\n      var byte = 1;\n      if (/^[\\u0000-\\u00ff]$/.test(c)) {\n        byte = 1;\n      } else {\n        byte = 2;\n      }\n      bytesCount += byte;\n      if (bytesCount <= len) {\n        sliceBytesStr += c;\n      } else {\n        isOverstep = true;\n      }\n    }\n  }\n\n  // 是否存在字节长度限制，若不存在则返回字节长度\n  if (!len) {\n\n    return bytesCount;\n  } else {\n    // 是否超出给定字节长度，超出则进行拼接\n    if (isOverstep) {\n\n      return sliceBytesStr += str;\n    } else {\n\n      return sliceBytesStr;\n    }\n  }\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\n__webpack_require__(7);\n\nexports.default = {\n\t//获取最大值\n\tgetMaxValue: function getMaxValue(arr) {\n\t\treturn Math.max.apply(Math, arr);\n\t},\n\n\t//获取最小值\n\tgetMinValue: function getMinValue(arr) {\n\t\treturn Math.min.apply(Math, arr);\n\t},\n\n\t//判断某个值是否在数组\n\tisInclude: function isInclude(arr, ele) {\n\t\tvar len = arr.length;\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tif (ele === arr[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}; /*\n    * @Author: houzhiqiag \n    * @Date: 2019-10-23 10:54:27 \n    * @Last Modified by:   houzhiqiag \n    * @Last Modified time: 2019-10-23 10:54:27 \n    */\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/*\n * @Author: houzhiqiag \n * @Date: 2019-10-15 10:26:43 \n * @Last Modified by: houzhiqiag\n * @Last Modified time: 2019-10-23 10:52:43\n*/\n\n/**\n* 方法说明：数组删除指定项\n* @method delete\n* @for Array\n* @param {index} 对数组的指定{index}下标项进行删除\n* @return {this} 该方法会修改原来数组\n*/\n\nArray.prototype.delete = function () {\n  this.splice(arguments[0], 1);\n  return this;\n};\n\n/**\n* 方法说明：数组替换指定项\n* @method replace\n* @for Array\n* @param {index, item} 对数组的指定{index}下标项进行替换为{item}\n* @return {this} 该方法会修改原来数组\n*/\n\nArray.prototype.replace = function () {\n  this.splice(arguments[0], 1, arguments[1]);\n  return this;\n};\n\n/**\n* 方法说明：数组指定项前面插入元素\n* @method appendBefore\n* @for Array\n* @param {index, item1, item2, item3.......} 在数组的指定{index}下标之前插入{item1, item2, item3......}\n* @return {this} 该方法会修改原来数组\n*/\n\nArray.prototype.appendBefore = function () {\n  for (var i = 1; i < arguments.length; i++) {\n    this.splice(arguments[0] + i - 1, 0, arguments[i]);\n  }\n  return this;\n};\n\n/**\n* 方法说明：数组指定项后面插入元素\n* @method appendBefore\n* @for Array\n* @param {index, item1, item2, item3.......} 在数组的指定{index}下标之后插入{item1, item2, item3......}\n* @return {this} 该方法会修改原来数组\n*/\n\nArray.prototype.appendAfter = function () {\n  for (var i = 1; i < arguments.length; i++) {\n    this.splice(arguments[0] + i, 0, arguments[i]);\n  }\n  return this;\n};\n\n/**\n* 方法说明：数组去重\n* @method unique\n* @for Array\n* @param {}\n* @return 返回值为去重后的数组，该方法不会修改原数组\n*/\n\nArray.prototype.unique = function () {\n  var container = {};\n  var result = [];\n  for (var index = 0; index < this.length; index++) {\n    var element = this[index];\n    if (!container[element]) {\n      container[element] = true;\n      result.push(element);\n    }\n  }\n  return result;\n};\n\n/**\n* 方法说明\n* @method sortByKey\n* @for 数组中根据键值排序\n* @param {key, isAscending} 参数名key为键名，isAscending默认为升序排序\n* @return {_this} 返回值不会修改原来数组，返回排序后新数组\n*/\n\nArray.prototype.sortByKey = function () {\n  var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var isAscending = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  var _this = [].concat(_toConsumableArray(new Set(this)));\n  try {\n\n    for (var i = 0; i < _this.length; i++) {\n      for (var j = 0; j < _this.length - 1 - i; j++) {\n        if (Number(_this[j][key]) > Number(_this[j + 1][key])) {\n          var temp = _this[j + 1];\n          _this[j + 1] = _this[j];\n          _this[j] = temp;\n        }\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  if (isAscending) {\n    return _this;\n  } else {\n    return _this.reverse();\n  }\n};\n\n/**\n* 多维数组展开为一维数组\n* @method flatten\n* @for Array\n* @param {} \n* 方法调用  Array.flatten()\n* @return {Array} 返回值为展开后的一维数组\n*/\n\nArray.prototype.flatten = function () {\n  var stack = [].concat(_toConsumableArray(this));\n  var res = [];\n  while (stack.length) {\n    // 使用 pop 从 stack 中取出并移除值\n    var next = stack.pop();\n    if (Array.isArray(next)) {\n      // 使用 push 送回内层数组中的元素，不会改动原始输入 original this\n      stack.push.apply(stack, _toConsumableArray(next));\n    } else {\n      res.push(next);\n    }\n  }\n  // 使用 reverse 恢复原数组的顺序\n  return res.reverse();\n};\n\n/**\n* 展开树的所有节点\n* @method flattenTree\n* @for Array\n* @param {flatKey} flatKey为递归展开所需的键\n* 方法调用  Array.flattenTree('children')\n* @return {Array} 返回值为展开的所有树节点，返回值不会修改原始数据\n*/\n\nArray.prototype.flattenTree = function () {\n  var flatKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"children\";\n\n  // 展开树的所有节点\n  var newArray = [];\n\n  function flatten(paramArr) {\n    for (var i = 0; i < paramArr.length; i++) {\n      newArray.push(paramArr[i]);\n      if (paramArr[i][flatKey] && paramArr[i][flatKey].length) {\n        flatten(paramArr[i][flatKey]);\n      } else {\n        continue;\n      }\n    }\n  }\n  flatten(this);\n  return newArray;\n};\n\n/**\n* 格式化树数据\n* @method formatTree\n* @for Array\n* @param {callback， loopKey} \n* callback接收一个参数，值为遍历出来的节点信息\n* loopKey默认值为children，当子节点不为children时修改此值\n* 调用方式 Array.formatTree(item=>{}, 'children')，修改item值，即可修改树节点值\n* @return {Array} 返回值为格式化后的树形结构，返回值不会修改原始数据\n*/\nArray.prototype.formatTree = function (callback) {\n  var loopKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"children\";\n\n  // 保证此节点的唯一性\n  var nodeKey = 1;\n  // 递归遍历值\n  function format(param) {\n    return param.map(function (item) {\n      // 如果item存在以loopKey为键的子节点，即递归处理\n      if (item[loopKey] && item[loopKey].length) format(item[loopKey]);\n      nodeKey++;\n      item['nodeKey'] = nodeKey;\n      return callback(item);\n    });\n  }\n\n  return format(this);\n};\n\n/**\n* 数组插值方法（将对象中键与数组item中的对象所含键所比较，将对象的值根据键赋值给数组）\n* @method setValueByKey\n* @for Array\n* 方法调用：jsonArray.setValueByKey(dataObj, ['key'], ['value'])\n* @param {objData, keyArr, valueArr} \n* objData为将要插入的数据对象，['key']是数组中所需插入比对时所需的键名数组,['value']是数组中所插入值的键名,\n* @return {Array} 返回值为插值后的数组，此方法不会修改原始数据\n*/\n\nArray.prototype.setValueByKey = function () {\n  var objData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var keyArr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['key'];\n  var valueArr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['value'];\n\n  if (JSON.stringify(objData) === '{}') return this;\n  return [].concat(_toConsumableArray(this)).map(function (item) {\n    keyArr.forEach(function (ele, index) {\n      if (objData.hasOwnProperty(item[ele])) {\n        var resultValue = objData[item[ele]];\n        item[valueArr[index]] = resultValue === null ? '' : resultValue.toString();\n      } else {\n        item[valueArr[index]] = '';\n      }\n    });\n    return item;\n  });\n};\n\n/**\n* 数组随机排序（费雪耶兹（Fisher–Yates） 也被称作高纳德（ Knuth）随机置乱算法）\n* @method shuffle\n* @for Array\n* @param {} \n* @return {Array} 返回值为随机排序后的数组\n*/\nArray.prototype.shuffle = function () {\n  var _this = [].concat(_toConsumableArray(this));\n  for (var i = _this.length - 1; i >= 0; i--) {\n    var randomIndex = Math.floor(Math.random() * (_this.length - 1));\n    var storageItem = _this[i];\n    _this[i] = _this[randomIndex];\n    _this[randomIndex] = storageItem;\n  }\n  return _this;\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\n__webpack_require__(9);\n\nexports.default = {\n\t//数字\n\tisNumeric: function isNumeric(input) {\n\t\treturn (/^(?:[1-9]\\d*|0)(?:\\.\\d+)?$/.test(input)\n\t\t);\n\t},\n\n\t//小数\n\tisDecimal: function isDecimal(input) {\n\t\treturn (/^[-+]?(?:0|[1-9]\\d*)\\.\\d+$/.test(input)\n\t\t);\n\t},\n\n\t//负小数\n\tisNegativeDecimal: function isNegativeDecimal(input) {\n\t\treturn (/^\\-(?:0|[1-9]\\d*)\\.\\d+$/.test(input)\n\t\t);\n\t},\n\n\t//正小数\n\tisPositiveDecimal: function isPositiveDecimal(input) {\n\t\treturn (/^\\+?(?:0|[1-9]\\d*)\\.\\d+$/.test(input)\n\t\t);\n\t},\n\n\t//整数\n\tisInteger: function isInteger(input) {\n\t\treturn (/^[-+]?(?:0|[1-9]\\d*)$/.test(input)\n\t\t);\n\t},\n\n\t//正整数\n\tisPositiveInteger: function isPositiveInteger(input) {\n\t\treturn (/^\\+?(?:0|[1-9]\\d*)$/.test(input)\n\t\t);\n\t},\n\n\t//负整数\n\tisNegativeInteger: function isNegativeInteger(input) {\n\t\treturn (/^\\-(?:0|[1-9]\\d*)$/.test(input)\n\t\t);\n\t}\n}; /*\n    * @Author: houzhiqiag \n    * @Date: 2019-10-23 10:54:16 \n    * @Last Modified by:   houzhiqiag \n    * @Last Modified time: 2019-10-23 10:54:16 \n    */\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:54:11 \n * @Last Modified by:   houzhiqiag \n * @Last Modified time: 2019-10-23 10:54:11 \n */\n/**\n* 方法说明\n* @method 尾递归阶乘\n* @for Number\n* @param Number.factorial()\n* @return 返回计算阶乘后的结果\n*/\nNumber.prototype.factorial = function () {\n  function c() {\n    var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    if (num <= 1) return 1;\n    return num * c(num - 1);\n  }\n  return c(parseInt(this || 1));\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:54:59 \n * @Last Modified by:   houzhiqiag \n * @Last Modified time: 2019-10-23 10:54:59 \n */\n\nexports.default = {\n\n\t// patterns: {\n\t// \tPATTERN_ERA: 'G', //Era 标志符 Era strings. For example: \"AD\" and \"BC\"\n\t// \tPATTERN_YEAR: 'y', //年\n\t// \tPATTERN_MONTH: 'M', //月份\n\t// \tPATTERN_DAY_OF_MONTH: 'd', //月份的天数\n\t// \tPATTERN_HOUR_OF_DAY1: 'k', //一天中的小时数（1-24）\n\t// \tPATTERN_HOUR_OF_DAY0: 'H', //24小时制，一天中的小时数（0-23）\n\t// \tPATTERN_MINUTE: 'm', //小时中的分钟数\n\t// \tPATTERN_SECOND: 's', //秒\n\t// \tPATTERN_MILLISECOND: 'S', //毫秒\n\t// \tPATTERN_DAY_OF_WEEK: 'E', //一周中对应的星期，如星期一，周一\n\t// \tPATTERN_DAY_OF_YEAR: 'D', //一年中的第几天\n\t// \tPATTERN_DAY_OF_WEEK_IN_MONTH: 'F', //一月中的第几个星期(会把这个月总共过的天数除以7,不够准确，推荐用W)\n\t// \tPATTERN_WEEK_OF_YEAR: 'w', //一年中的第几个星期\n\t// \tPATTERN_WEEK_OF_MONTH: 'W', //一月中的第几星期(会根据实际情况来算)\n\t// \tPATTERN_AM_PM: 'a', //上下午标识\n\t// \tPATTERN_HOUR1: 'h', //12小时制 ，am/pm 中的小时数（1-12）\n\t// \tPATTERN_HOUR0: 'K', //和h类型\n\t// \tPATTERN_ZONE_NAME: 'z', //时区名\n\t// \tPATTERN_ZONE_VALUE: 'Z', //时区值\n\t// \tPATTERN_WEEK_YEAR: 'Y', //和y类型\n\t// \tPATTERN_ISO_DAY_OF_WEEK: 'u',\n\t// \tPATTERN_ISO_ZONE: 'X'\n\t// },\n\t// week: {\n\t// \t'ch': {\n\t// \t\t\"0\": \"\\u65e5\",\n\t// \t\t\"1\": \"\\u4e00\",\n\t// \t\t\"2\": \"\\u4e8c\",\n\t// \t\t\"3\": \"\\u4e09\",\n\t// \t\t\"4\": \"\\u56db\",\n\t// \t\t\"5\": \"\\u4e94\",\n\t// \t\t\"6\": \"\\u516d\"\n\t// \t},\n\t// \t'en': {\n\t// \t\t\"0\": \"Sunday\",\n\t// \t\t\"1\": \"Monday\",\n\t// \t\t\"2\": \"Tuesday\",\n\t// \t\t\"3\": \"Wednesday\",\n\t// \t\t\"4\": \"Thursday\",\n\t// \t\t\"5\": \"Friday\",\n\t// \t\t\"6\": \"Saturday\"\n\t// \t}\n\t// },\n\t/**\n * 时间戳转换成指定格式日期\n * @method timestampFormat\n * @for Date\n * @param {formats:String} formats为时间戳转换后的格式\n * 调用： timestamp.timestampFormat('Y-M-D H:I:S')\n * @return {String}}} 返回值为时间戳转换后的字符串\n */\n\ttimestampFormat: function timestampFormat() {\n\t\tvar timestamp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n\t\tvar formats = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Y-M-D H:I:S';\n\n\t\tif (!timestamp) timestamp = Date.now();\n\t\ttimestamp = Number(timestamp);\n\t\tfunction zero(value) {\n\t\t\tif (value < 10) {\n\t\t\t\treturn '0' + value;\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\tvar myDate = timestamp ? new Date(timestamp) : new Date();\n\n\t\tvar year = myDate.getFullYear();\n\t\tvar month = zero(myDate.getMonth() + 1);\n\t\tvar day = zero(myDate.getDate());\n\n\t\tvar hour = zero(myDate.getHours());\n\t\tvar minite = zero(myDate.getMinutes());\n\t\tvar second = zero(myDate.getSeconds());\n\n\t\treturn formats.replace(/Y|M|D|H|I|S/ig, function (matches) {\n\n\t\t\treturn {\n\t\t\t\tY: year,\n\t\t\t\tM: month,\n\t\t\t\tD: day,\n\t\t\t\tH: hour,\n\t\t\t\tI: minite,\n\t\t\t\tS: second\n\t\t\t}[matches];\n\t\t});\n\t},\n\n\t//是否闰年\n\tisLeapYear: function isLeapYear(year) {\n\t\treturn year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n\t},\n\n\t//获取某个月的天数，从1开始\n\tgetDaysOfMonth: function getDaysOfMonth(year, month) {\n\t\treturn [31, this.isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month - 1];\n\t},\n\n\n\t/**\n  * 计算一个日期是当年的第几天\n  * @param {Object} date为一个日期对象\n  */\n\tdayOfTheYear: function dayOfTheYear(date) {\n\t\tvar obj = new Date(date);\n\t\tvar year = obj.getFullYear();\n\t\tvar month = obj.getMonth(); //从0开始\n\t\tvar days = obj.getDate();\n\t\tvar daysArr = [31, this.isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\t\tfor (var i = 0; i < month; i++) {\n\t\t\tdays += daysArr[i];\n\t\t}\n\t\treturn days;\n\t},\n\n\n\t//获得时区名和值\n\tgetZoneNameValue: function getZoneNameValue(dateObj) {\n\t\tvar date = new Date(dateObj);\n\t\tdate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n\t\tvar arr = date.toString().match(/([A-Z]+)([-+]\\d+:?\\d+)/);\n\t\tvar obj = {\n\t\t\t'name': arr[1],\n\t\t\t'value': arr[2]\n\t\t};\n\t\treturn obj;\n\t}\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  REGEXS: {\n    AllSpecialString: /\\u0060|\\u007e|\\u0021|\\u0040|\\u0023|\\u0024|\\u0025|\\u005e|\\u0026|\\u002a|\\u0028|\\u0029|\\u002d|\\u003d|\\u002b|\\u003c|\\u003e|\\u003f|\\u002c|\\u002e|\\u002f|\\u003a|\\u0022|\\u003b|\\u0027|\\u007b|\\u007d|\\u005b|\\u005d|\\u005c|\\u007c|\\uff01|\\u0040|\\u0023|\\uffe5|\\u0025|\\u2026|\\u2026|\\u0026|\\u002a|\\uff08|\\uff09|\\u2014|\\u2014|\\u002b|\\u300c|\\u300d|\\u3010|\\u3011|\\u300a|\\u300b|\\uff1f|\\uff1a|\\u201c|\\u201d|\\uff1b|\\u2018|\\u2019|\\u007c|\\u3001|\\u0020/,\n    SpecialString: /\\u0060|\\u0024|\\u0026|\\u002a|\\u005c|\\u003c|\\u003e/,\n    email: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n    url: /^((https|http|ftp|rtsp|mms)?:\\/\\/)[^\\s]+/,\n    password: /[\\w\\`~!@#$%^&*()-=_+{}\\[\\]:\";'<>?,./*-+.\\|]{8,12}$/,\n    code: /^[A-Za-z0-9]{4}$/,\n    drivingLicense: /^[0-9]{12}$/,\n    phone: /^1[345678]\\d{9}$/,\n    name: /^[\\u4E00-\\u9FA5A-Za-z]+$/,\n    EnString: /^[A-Za-z]+$/,\n    EnNumber: /^[A-Za-z0-9]+$/,\n    Number: /^[0-9]+$/,\n    CnString: /^[\\u4E00-\\u9FA5]+$/,\n    CnNumber: /^[\\u4E00-\\u9FA50-9]+$/,\n    RegisterNumber: /(^(?:(?![IOZSV])[\\dA-Z]){2}\\d{6}(?:(?![IOZSV])[\\dA-Z]){10}$)|(^\\d{15}$)/,\n    CarNo: /^[\\u4e00-\\u9fa5]{1}[A-Z]{1}[A-Z_0-9]{5,6}$/,\n    PersonNo: /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/\n  },\n\n  // 检索字符串全部特殊字符\n  checkString: function checkString(input) {\n    if (!input) {\n      return false;\n    }\n    // 没有匹配到则返回null，非null则为合格字符串\n    if (!input.match(this.REGEXS.AllSpecialString)) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  checkAge: function checkAge(input) {\n    console.log(input, 'input');\n    if (this.REGEXS.Number.test(input)) {\n      if (input < 18 || input > 70) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  },\n\n\n  // 检索文本部分特殊字符\n  checkTextArea: function checkTextArea(input) {\n    // 没有匹配到则返回null，非null则为合格字符串\n    if (!input.match(this.REGEXS.SpecialString)) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  //检索数字\n  checkNumber: function checkNumber(input) {\n    return this.REGEXS.Number.test(input);\n  },\n\n\n  // 检索密码\n  checkPassword: function checkPassword(input) {\n    return this.REGEXS.password.test(input);\n  },\n\n\n  // 检索4位验证码\n  checkCode: function checkCode(input) {\n    return this.REGEXS.code.test(input);\n  },\n\n\n  // 检索手机号\n  checkPhone: function checkPhone(input) {\n    return this.REGEXS.phone.test(input);\n  },\n\n\n  // 检索姓名\n  checkCName: function checkCName(input) {\n    return this.REGEXS.name.test(input);\n  },\n\n\n  // 检索英文字符串\n  checkEnString: function checkEnString(input) {\n    return this.REGEXS.EnString.test(input);\n  },\n\n\n  // 检索英文+数字字符串\n  checkEnNumber: function checkEnNumber(input) {\n    return this.REGEXS.EnNumber.test(input);\n  },\n\n\n  // 检索中文字符串\n  checkCnString: function checkCnString(input) {\n    return this.REGEXS.CnString.test(input);\n  },\n\n\n  // 检索中文+数字字符串\n  checkCnNumber: function checkCnNumber(input) {\n    return this.REGEXS.CnNumber.test(input);\n  },\n\n\n  // 检索企业注册号\n  checkRegisterNumber: function checkRegisterNumber(input) {\n    // 没有匹配到则返回null，非null则为合格字符串\n    return this.REGEXS.RegisterNumber.test(input);\n  },\n\n\n  // 检索URL\n  checkUrl: function checkUrl(input) {\n    return this.REGEXS.url.test(input);\n  },\n\n\n  // 检索车牌号\n  checkCarNo: function checkCarNo(input) {\n    return this.REGEXS.CarNo.test(input);\n  },\n\n\n  // 检索身份证号\n  checkPersonCount: function checkPersonCount(input) {\n    return this.REGEXS.PersonNo.test(input);\n  },\n\n\n  // 检索行驶证号\n  checkDrivingLicense: function checkDrivingLicense(input) {\n    return this.REGEXS.drivingLicense.test(input);\n  }\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:54:35 \n * @Last Modified by: houzhiqiag\n * @Last Modified time: 2019-10-23 11:17:32\n */\n\nexports.default = {\n  REGEXS: {\n    URL_PATTERN: /^((https|http|ftp|rtsp|mms)?:\\/\\/)[^\\s]+/,\n    PARAMS_PATTERN: /(\\w+)=([^&#]*)/igm\n  },\n  // 检索是否为合法URL\n  isUrl: function isUrl(input) {\n    return this.REGEXS.URL_PATTERN.test(input);\n  },\n  urlTransformParams: function urlTransformParams(url) {\n    var matchStr = null;\n    var params = {};\n    while ((matchStr = this.REGEXS.PARAMS_PATTERN.exec(url)) != null) {\n      params[matchStr[1]] = matchStr[2];\n    }\n    return params;\n  },\n\n  // 路由传参转unicode码\n  urlEncode: function urlEncode(params) {\n    return window.encodeURIComponent(JSON.stringify(params));\n  },\n\n  // 路由传参转解析unicode码\n  urlDecode: function urlDecode(url) {\n    return JSON.parse(window.decodeURIComponent(url));\n  }\n  // isNum(input) {\n  //   return /^\\d+(\\.\\d+)?$/.test(input);\n  // }\n\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadScript;\nfunction loadScript(url, hasCallback) {\n  return createScript(url);\n  /**\n   * 创建script\n   * @param url\n   * @returns {Promise}\n   */\n  function createScript(url) {\n    var scriptElement = document.createElement('script');\n    document.body.appendChild(scriptElement);\n    var promise = new Promise(function (resolve, reject) {\n      scriptElement.addEventListener('load', function (e) {\n        removeScript(scriptElement);\n        if (!hasCallback) {\n          resolve(e);\n        }\n      }, false);\n\n      scriptElement.addEventListener('error', function (e) {\n        removeScript(scriptElement);\n        reject(e);\n      }, false);\n\n      if (hasCallback) {\n        window.____callback____ = function () {\n          resolve();\n          window.____callback____ = null;\n        };\n      }\n    });\n\n    if (hasCallback) {\n      url += '&callback=____callback____';\n    }\n\n    scriptElement.src = url;\n\n    return promise;\n  }\n\n  /**\n   * 移除script标签\n   * @param scriptElement script dom\n   */\n  function removeScript(scriptElement) {\n    document.body.removeChild(scriptElement);\n  }\n}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// web-integrate-utils.js","/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:55:08 \n * @Last Modified by: houzhiqiag\n * @Last Modified time: 2019-10-23 15:28:12\n */\n\nimport type from './utils/type/index'\nimport email from './utils/email/index'\nimport phone from './utils/phone/index'\nimport string from './utils/string/index'\nimport array from './utils/array/index'\nimport number from './utils/number/index'\nimport date from './utils/date/index'\nimport check from './utils/check/index'\nimport url from './utils/url/index'\nimport loadScript from './utils/loadScript'\n\nexport {\n  type,\n  email,\n  phone,\n  string,\n  array,\n  number,\n  date,\n  check,\n  url,\n  loadScript\n}\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","export default {\n  // 是否字符串\n  isString(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'String'\n  },\n  // 是否数字\n  isNumber(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Number'\n  },\n  // 是否boolean\n  isBoolean(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Boolean'\n  },\n  // 是否函数\n  isFunction(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Function'\n  },\n  // 是否为null\n  isNull(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Null'\n  },\n  // 是否undefined\n  isUndefined(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Undefined'\n  },\n  // 是否对象\n  isObject(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Object'\n  },\n  // 是否数组\n  isArray(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Array'\n  },\n  // 是否时间\n  isDate(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Date'\n  },\n  // 是否正则\n  isRegExp(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'RegExp'\n  },\n  // 是否错误对象\n  isError(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Error'\n  },\n  // 是否Symbol函数\n  isSymbol(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Symbol'\n  },\n  // 是否Promise对象\n  isPromise(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Promise'\n  },\n  //是否Set对象\n  isSet(o) {\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Set'\n  },\n  // 值是否存在\n  isBeing(o) {\n    if (!o || o === 'null' || o === 'undefined' || o === 'false' || o === 'NaN') return false\n    return true\n  },\n\n  isTrue(o) {\n    return !this.isFalse(o)\n  },\n  getClientType() {\n    let u = navigator.userAgent;\n    if (u.indexOf('Android') > -1 || u.indexOf('Linux') > -1) {\n      // 安卓手机\n      return \"Android\";\n    } else if (u.indexOf('iPhone') > -1) {\n      // 苹果手机\n      return \"iPhone\";\n    } else if (u.indexOf('iPad') > -1) {\n      // iPad\n      return \"iPad\";\n    } else if (u.indexOf('Windows Phone') > -1) {\n      // winphone手机\n      return \"Windows Phone\";\n    } else {\n      return \"other\";\n    }\n  },\n  isIos() {\n    return this.getClientType === \"iPhone\" || this.getClientType === \"iPad\"\n  },\n  isAndroid() {\n    return this.getClientType === \"iPhone\"\n  },\n  isWinPhone() {\n    return this.getClientType === \"Windows Phone\"\n  },\n  // 是否为PC端\n  isPC() {\n    let userAgentInfo = navigator.userAgent;\n    let Agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n    let flag = true;\n    for (let v = 0; v < Agents.length; v++) {\n      if (userAgentInfo.indexOf(Agents[v]) > 0) {\n        flag = false;\n        break;\n      }\n    }\n    return flag;\n  },\n  getBrowserType() {\n    let userAgent = navigator.userAgent; //取得浏览器的userAgent字符串\n    let isOpera = userAgent.indexOf(\"Opera\") > -1; //判断是否Opera浏览器\n    let isIE = userAgent.indexOf(\"compatible\") > -1 && userAgent.indexOf(\"MSIE\") > -1 && !isOpera; //判断是否IE浏览器\n    let isIE11 = userAgent.indexOf('Trident') > -1 && userAgent.indexOf(\"rv:11.0\") > -1;\n    let isEdge = userAgent.indexOf(\"Edge\") > -1 && !isIE; //判断是否IE的Edge浏览器  \n    let isFF = userAgent.indexOf(\"Firefox\") > -1; //判断是否Firefox浏览器\n    let isSafari = userAgent.indexOf(\"Safari\") > -1 && userAgent.indexOf(\"Chrome\") == -1; //判断是否Safari浏览器\n    let isChrome = userAgent.indexOf(\"Chrome\") > -1 && userAgent.indexOf(\"Safari\") > -1; //判断Chrome浏览器\n\n    if (isIE) {\n      let reIE = new RegExp(\"MSIE (\\\\d+\\\\.\\\\d+);\");\n      reIE.test(userAgent);\n      let fIEVersion = parseFloat(RegExp[\"$1\"]);\n      if (fIEVersion == 7) return \"IE7\"\n      else if (fIEVersion == 8) return \"IE8\";\n      else if (fIEVersion == 9) return \"IE9\";\n      else if (fIEVersion == 10) return \"IE10\";\n      else return \"IE7以下\"//IE版本过低\n    }\n    if (isIE11) return 'IE11';\n    if (isEdge) return \"Edge\";\n    if (isFF) return \"FF\";\n    if (isOpera) return \"Opera\";\n    if (isSafari) return \"Safari\";\n    if (isChrome) return \"Chrome\";\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/type/index.js","export default {\n  REGEXS: {\n    EMAIL_PATTERN: /^[-\\w\\+]+(?:\\.[-\\w]+)*@[-a-z0-9]+(?:\\.[a-z0-9]+)*(?:\\.[a-z]{2,})$/i\n  },\n  //邮箱格式校验\n  isEmail(input) {\n    return this.REGEXS.EMAIL_PATTERN.test(input);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/email/index.js","/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:54:51 \n * @Last Modified by:   houzhiqiag \n * @Last Modified time: 2019-10-23 10:54:51 \n */\n\nexport default {\n  REGEXS: {\n    //中国电信号码段\t\t\t \n    CHINA_TELECOM_PATTERN: /^(?:\\+86)?1(?:33|53|7[37]|8[019])\\d{8}$|^(?:\\+86)?1700\\d{7}$/,\n    //中国联通号码段\n    CHINA_UNICOM_PATTERN: /^(?:\\+86)?1(?:3[0-2]|4[5]|5[56]|7[56]|8[56])\\d{8}$|^(?:\\+86)?170[7-9]\\d{7}$/,\n    //中国移动号码段\n    CHINA_MOBILE_PATTERN: /^(?:\\+86)?1(?:3[4-9]|4[7]|5[0-27-9]|7[8]|8[2-478])\\d{8}$|^(?:\\+86)?1705\\d{7}$/,\n    //电话座机号码段\n    FIXED_TEL_PATTERN: /^(?:\\(\\d{3,4}\\)|\\d{3,4}-)?\\d{7,8}(?:-\\d{1,4})?$/,\n    //手机号码\n    PHONE_PATTERN: /^(?:\\+86)?(?:13\\d|14[57]|15[0-35-9]|17[35-8]|18\\d)\\d{8}$|^(?:\\+86)?170[057-9]\\d{7}$/,\n    //手机号简单校验，不根据运营商分类\n    PHONE_SIMPLE_PATTERN: /^(?:\\+86)?1\\d{10}$/\n  },\n  //固定电话\n  isPhoneCallNum(input) {\n    return this.REGEXS.FIXED_TEL_PATTERN.test(input);\n  },\n  //电信手机号码\n  isChinaTelecomPhone(input) {\n    return this.REGEXS.CHINA_TELECOM_PATTERN.test(input);\n  },\n  //中国联通\n  isChinaUnicomPhone(input) {\n    return this.REGEXS.CHINA_UNICOM_PATTERN.test(input);\n  },\n  //中国移动\n  isChinaMobilePhone(input) {\n    return this.REGEXS.CHINA_MOBILE_PATTERN.test(input);\n  },\n  //手机号码\n  isPhone(input) {\n    return this.REGEXS.PHONE_PATTERN.test(input);\n  },\n  //手机号码简单校验，只校验长度\n  isPhoneNumBySize(input) {\n    return this.REGEXS.PHONE_SIMPLE_PATTERN.test(input);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/phone/index.js","/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:54:42 \n * @Last Modified by: houzhiqiag\n * @Last Modified time: 2019-10-23 14:57:38\n */\n\nimport './prototype'\n\nexport default {\n\t// 字符串是否为空\n\tisEmpty(input) {\n\t\treturn input === null || input === '';\n\t},\n\t// 字符串是否存在非空字符\n\tisBlank(input) {\n\t\treturn input === null || /^\\s*$/.test(input);\n\t},\n\t// 字符串是否完全相等\n\tisEquals(input1, input2) {\n\t\treturn input1 === input2;\n\t},\n\t// 字符串忽略大小写是否相等\n\tisEqualsIgnoreCase(input1, input2) {\n\t\treturn input1.toLocaleLowerCase() == input2.toLocaleLowerCase();\n\t},\n\t// 字符串是否包含\n\tisContains(input, searchSeq) {\n\t\treturn input.indexOf(searchSeq) >= 0;\n\t},\n\t// 是否为英文\n\tisEnWords(input) {\n\t\treturn /^[a-z]+$/i.test(input);\n\t},\n\t//只包含字母、空格\n\tisEnSpace(input) {\n\t\treturn /^[a-z\\s]*$/i.test(input);\n\t},\n\t//只包含字母、数字\n\tisEnNumber(input) {\n\t\treturn /^[a-z0-9]+$/i.test(input);\n\t},\n\t//只包含字母、数字和空格\n\tisEnNumberSpace(input) {\n\t\treturn /^[a-z0-9\\s]*$/i.test(input);\n\t},\n\t// 是否为中文\n\tisChinese(input) {\n\t\treturn /^[\\u4E00-\\u9FA5]+$/.test(input);\n\t},\n\t// 去除空格\n\ttrimSpace(input) {\n\t\treturn input.replace(/\\s+/g, \"\");\n\t},\n\t// 过滤字符串中特殊字符&、<、>\n\tfilterTag(input) {\n\t\tinput = input.replace(/&/ig, \"&amp;\");\n\t\tinput = input.replace(/</ig, \"&lt;\");\n\t\tinput = input.replace(/>/ig, \"&gt;\");\n\t\tinput = input.replace(\" \", \"&nbsp;\");\n\t\treturn input;\n\t},\n\t//去掉中文字符\n\tremoveChinese(input) {\n\t\treturn input.replace(/[\\u4E00-\\u9FA5]+/gm, \"\");\n\t},\n\t// 移除字符串内空白字符\n\tremoveBlank(input) {\n\t\treturn input.replace(/\\s+/g, '');\n\t},\n\t//首字母大写\n\tfirstToUppercase(input) {\n\t\tif (input === null || input.length === 0) {\n\t\t\treturn input;\n\t\t}\n\t\treturn input.replace(/^[a-z]/, (matchStr) => {\n\t\t\treturn matchStr.toLocaleUpperCase();\n\t\t});\n\t},\n\t//首字母小写\n\tfirstToLowerCase(input) {\n\t\tif (input === null || input.length === 0) {\n\t\t\treturn input;\n\t\t}\n\t\treturn input.replace(/^[A-Z]/, (matchStr) => {\n\t\t\treturn matchStr.toLocaleUpperCase();\n\t\t});\n\t},\n\t// 大小写互转\n\ttoogleSwapCase(input) {\n\t\treturn input.replace(/[a-z]/ig, (matchStr) => {\n\t\t\tif (matchStr >= 'A' && matchStr <= 'Z') {\n\t\t\t\treturn matchStr.toLocaleLowerCase();\n\t\t\t} else if (matchStr >= 'a' && matchStr <= 'z') {\n\t\t\t\treturn matchStr.toLocaleUpperCase();\n\t\t\t}\n\t\t});\n\t},\n\t//字符串反转\n\treverse(input) {\n\t\tif (this.isBlank(input)) {\n\t\t\tinput;\n\t\t}\n\t\treturn input.split(\"\").reverse().join(\"\");\n\t},\n\t//转义元字符\n\tescapeMetacharacter(input) {\n\t\tconst metacharacter = \"^$()*+.[]|\\\\-?{}\";\n\t\tif (metacharacter.indexOf(input) >= 0) {\n\t\t\tinput = \"\\\\\" + input;\n\t\t}\n\t\treturn input;\n\t},\n\t//转义字符串中的元字符\n\tescapeMetacharacterOfStr(input) {\n\t\treturn input.replace(/[-$^()*+.\\[\\]|\\\\?{}]/gm, \"\\\\$&\");\n\t},\n\t//中文转为unicode编码\n\tchineseToUnicode(input) {\n\t\treturn input.replace(/[\\u4E00-\\u9FA5]/g, (matchStr) => {\n\t\t\treturn \"\\\\u\" + matchStr.charCodeAt(0).toString(16);\n\t\t});\n\t},\n\n\t//英文状态下移除特殊字符\n\tremoveSpecialCharacter(input) {\n\t\treturn input.replace(/[!-/:-@\\[-`{-~]/g, \"\");\n\t}\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/string/index.js","/*\n * @Author: houzhiqiag \n * @Date: 2019-10-14 16:05:18 \n * @Last Modified by: houzhiqiag\n * @Last Modified time: 2019-10-22 17:14:46\n */\n\n/**\n* 获取字符串的字节数，根据传入字节长度进行截取，扩展string类型方法\n* @method getBytes\n* @for 字符串方法\n* @param {len, str} len 所需截取字节长度, str超出所替换的字符串\n* @return {String/NUmber}}} 传入len时，返回字节长度为len的字符串，不传如len时返回该字符串的字符长度\n* 当所截取最后一位字符为中文时，会保留该字符\n*/\nString.prototype.getBytes = function (len = 0, str = '') {\n  let bytesCount = 0;\n  let sliceBytesStr = \"\";\n  let isOverstep = false;\n\n  if (this != null) {\n    for (let i = 0; i < this.length; i++) {\n      let c = this.charAt(i);\n      let byte = 1;\n      if (/^[\\u0000-\\u00ff]$/.test(c)) {\n        byte = 1;\n      } else {\n        byte = 2;\n      }\n      bytesCount += byte;\n      if (bytesCount <= len) {\n        sliceBytesStr += c;\n      } else {\n        isOverstep = true\n      }\n    }\n  }\n\n  // 是否存在字节长度限制，若不存在则返回字节长度\n  if (!len) {\n\n    return bytesCount;\n  } else {\n    // 是否超出给定字节长度，超出则进行拼接\n    if (isOverstep) {\n\n      return sliceBytesStr += str;\n    } else {\n\n      return sliceBytesStr;\n    }\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/utils/string/prototype.js","/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:54:27 \n * @Last Modified by:   houzhiqiag \n * @Last Modified time: 2019-10-23 10:54:27 \n */\n\nimport './prototype'\n\nexport default {\n\t//获取最大值\n\tgetMaxValue(arr) {\n\t\treturn Math.max.apply(Math, arr);\n\t},\n\t//获取最小值\n\tgetMinValue(arr) {\n\t\treturn Math.min.apply(Math, arr);\n\t},\n\t//判断某个值是否在数组\n\tisInclude(arr, ele) {\n\t\tlet len = arr.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tif (ele === arr[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/array/index.js","/*\n * @Author: houzhiqiag \n * @Date: 2019-10-15 10:26:43 \n * @Last Modified by: houzhiqiag\n * @Last Modified time: 2019-10-23 10:52:43\n*/\n\n/**\n* 方法说明：数组删除指定项\n* @method delete\n* @for Array\n* @param {index} 对数组的指定{index}下标项进行删除\n* @return {this} 该方法会修改原来数组\n*/\n\nArray.prototype.delete = function () {\n  this.splice(arguments[0], 1)\n  return this\n}\n\n/**\n* 方法说明：数组替换指定项\n* @method replace\n* @for Array\n* @param {index, item} 对数组的指定{index}下标项进行替换为{item}\n* @return {this} 该方法会修改原来数组\n*/\n\nArray.prototype.replace = function () {\n  this.splice(arguments[0], 1, arguments[1])\n  return this\n}\n\n/**\n* 方法说明：数组指定项前面插入元素\n* @method appendBefore\n* @for Array\n* @param {index, item1, item2, item3.......} 在数组的指定{index}下标之前插入{item1, item2, item3......}\n* @return {this} 该方法会修改原来数组\n*/\n\nArray.prototype.appendBefore = function () {\n  for (let i = 1; i < arguments.length; i++) {\n    this.splice((arguments[0] + i - 1), 0, arguments[i])\n  }\n  return this\n}\n\n/**\n* 方法说明：数组指定项后面插入元素\n* @method appendBefore\n* @for Array\n* @param {index, item1, item2, item3.......} 在数组的指定{index}下标之后插入{item1, item2, item3......}\n* @return {this} 该方法会修改原来数组\n*/\n\nArray.prototype.appendAfter = function () {\n  for (let i = 1; i < arguments.length; i++) {\n    this.splice(arguments[0] + i, 0, arguments[i])\n  }\n  return this\n}\n\n/**\n* 方法说明：数组去重\n* @method unique\n* @for Array\n* @param {}\n* @return 返回值为去重后的数组，该方法不会修改原数组\n*/\n\nArray.prototype.unique = function () {\n  let container = {}\n  let result = []\n  for (let index = 0; index < this.length; index++) {\n    const element = this[index];\n    if (!container[element]) {\n      container[element] = true\n      result.push(element)\n    }\n  }\n  return result\n}\n\n/**\n* 方法说明\n* @method sortByKey\n* @for 数组中根据键值排序\n* @param {key, isAscending} 参数名key为键名，isAscending默认为升序排序\n* @return {_this} 返回值不会修改原来数组，返回排序后新数组\n*/\n\nArray.prototype.sortByKey = function (key = '', isAscending = true) {\n  let _this = [...new Set(this)]\n  try {\n\n    for (let i = 0; i < _this.length; i++) {\n      for (let j = 0; j < _this.length - 1 - i; j++) {\n        if (Number(_this[j][key]) > Number(_this[j + 1][key])) {\n          let temp = _this[j + 1]\n          _this[j + 1] = _this[j]\n          _this[j] = temp\n        }\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  if (isAscending) {\n    return _this\n  } else {\n    return _this.reverse()\n  }\n}\n\n/**\n* 多维数组展开为一维数组\n* @method flatten\n* @for Array\n* @param {} \n* 方法调用  Array.flatten()\n* @return {Array} 返回值为展开后的一维数组\n*/\n\nArray.prototype.flatten = function () {\n  const stack = [...this];\n  const res = [];\n  while (stack.length) {\n    // 使用 pop 从 stack 中取出并移除值\n    const next = stack.pop();\n    if (Array.isArray(next)) {\n      // 使用 push 送回内层数组中的元素，不会改动原始输入 original this\n      stack.push(...next);\n    } else {\n      res.push(next);\n    }\n  }\n  // 使用 reverse 恢复原数组的顺序\n  return res.reverse();\n}\n\n/**\n* 展开树的所有节点\n* @method flattenTree\n* @for Array\n* @param {flatKey} flatKey为递归展开所需的键\n* 方法调用  Array.flattenTree('children')\n* @return {Array} 返回值为展开的所有树节点，返回值不会修改原始数据\n*/\n\nArray.prototype.flattenTree = function (flatKey = \"children\") {\n  // 展开树的所有节点\n  let newArray = []\n\n  function flatten(paramArr) {\n    for (let i = 0; i < paramArr.length; i++) {\n      newArray.push(paramArr[i])\n      if (paramArr[i][flatKey] && paramArr[i][flatKey].length) {\n        flatten(paramArr[i][flatKey])\n      } else {\n        continue;\n      }\n    }\n  }\n  flatten(this)\n  return newArray\n}\n\n/**\n* 格式化树数据\n* @method formatTree\n* @for Array\n* @param {callback， loopKey} \n* callback接收一个参数，值为遍历出来的节点信息\n* loopKey默认值为children，当子节点不为children时修改此值\n* 调用方式 Array.formatTree(item=>{}, 'children')，修改item值，即可修改树节点值\n* @return {Array} 返回值为格式化后的树形结构，返回值不会修改原始数据\n*/\nArray.prototype.formatTree = function (callback, loopKey = \"children\") {\n  // 保证此节点的唯一性\n  let nodeKey = 1\n  // 递归遍历值\n  function format(param) {\n    return param.map((item) => {\n      // 如果item存在以loopKey为键的子节点，即递归处理\n      if (item[loopKey] && item[loopKey].length) format(item[loopKey])\n      nodeKey++\n      item['nodeKey'] = nodeKey\n      return callback(item)\n    })\n  }\n\n  return format(this)\n}\n\n/**\n* 数组插值方法（将对象中键与数组item中的对象所含键所比较，将对象的值根据键赋值给数组）\n* @method setValueByKey\n* @for Array\n* 方法调用：jsonArray.setValueByKey(dataObj, ['key'], ['value'])\n* @param {objData, keyArr, valueArr} \n* objData为将要插入的数据对象，['key']是数组中所需插入比对时所需的键名数组,['value']是数组中所插入值的键名,\n* @return {Array} 返回值为插值后的数组，此方法不会修改原始数据\n*/\n\nArray.prototype.setValueByKey = function (objData = {}, keyArr = ['key'], valueArr = ['value']) {\n  if (JSON.stringify(objData) === '{}') return this\n  return [...this].map((item) => {\n    keyArr.forEach((ele, index) => {\n      if (objData.hasOwnProperty(item[ele])) {\n        let resultValue = objData[item[ele]]\n        item[valueArr[index]] = resultValue === null ? '' : resultValue.toString()\n      } else {\n        item[valueArr[index]] = ''\n      }\n    })\n    return item\n  })\n}\n\n/**\n* 数组随机排序（费雪耶兹（Fisher–Yates） 也被称作高纳德（ Knuth）随机置乱算法）\n* @method shuffle\n* @for Array\n* @param {} \n* @return {Array} 返回值为随机排序后的数组\n*/\nArray.prototype.shuffle = function () {\n  let _this = [...this];\n  for (let i = _this.length - 1; i >= 0; i--) {\n    let randomIndex = Math.floor(Math.random() * (_this.length - 1))\n    let storageItem = _this[i];\n    _this[i] = _this[randomIndex]\n    _this[randomIndex] = storageItem\n  }\n  return _this\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/array/prototype.js","/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:54:16 \n * @Last Modified by:   houzhiqiag \n * @Last Modified time: 2019-10-23 10:54:16 \n */\n\nimport './prototype'\n\nexport default {\n\t//数字\n\tisNumeric(input) {\n\t\treturn /^(?:[1-9]\\d*|0)(?:\\.\\d+)?$/.test(input);\n\t},\n\t//小数\n\tisDecimal(input) {\n\t\treturn /^[-+]?(?:0|[1-9]\\d*)\\.\\d+$/.test(input);\n\t},\n\t//负小数\n\tisNegativeDecimal(input) {\n\t\treturn /^\\-(?:0|[1-9]\\d*)\\.\\d+$/.test(input);\n\t},\n\t//正小数\n\tisPositiveDecimal(input) {\n\t\treturn /^\\+?(?:0|[1-9]\\d*)\\.\\d+$/.test(input);\n\t},\n\t//整数\n\tisInteger(input) {\n\t\treturn /^[-+]?(?:0|[1-9]\\d*)$/.test(input);\n\t},\n\t//正整数\n\tisPositiveInteger(input) {\n\t\treturn /^\\+?(?:0|[1-9]\\d*)$/.test(input);\n\t},\n\t//负整数\n\tisNegativeInteger(input) {\n\t\treturn /^\\-(?:0|[1-9]\\d*)$/.test(input);\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/number/index.js","/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:54:11 \n * @Last Modified by:   houzhiqiag \n * @Last Modified time: 2019-10-23 10:54:11 \n */\n/**\n* 方法说明\n* @method 尾递归阶乘\n* @for Number\n* @param Number.factorial()\n* @return 返回计算阶乘后的结果\n*/\nNumber.prototype.factorial = function () {\n  function c(num = 1) {\n    if (num <= 1) return 1\n    return num * c(num - 1)\n  }\n  return c(parseInt(this || 1))\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/number/prototype.js","/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:54:59 \n * @Last Modified by:   houzhiqiag \n * @Last Modified time: 2019-10-23 10:54:59 \n */\n\nexport default {\n\n\t// patterns: {\n\t// \tPATTERN_ERA: 'G', //Era 标志符 Era strings. For example: \"AD\" and \"BC\"\n\t// \tPATTERN_YEAR: 'y', //年\n\t// \tPATTERN_MONTH: 'M', //月份\n\t// \tPATTERN_DAY_OF_MONTH: 'd', //月份的天数\n\t// \tPATTERN_HOUR_OF_DAY1: 'k', //一天中的小时数（1-24）\n\t// \tPATTERN_HOUR_OF_DAY0: 'H', //24小时制，一天中的小时数（0-23）\n\t// \tPATTERN_MINUTE: 'm', //小时中的分钟数\n\t// \tPATTERN_SECOND: 's', //秒\n\t// \tPATTERN_MILLISECOND: 'S', //毫秒\n\t// \tPATTERN_DAY_OF_WEEK: 'E', //一周中对应的星期，如星期一，周一\n\t// \tPATTERN_DAY_OF_YEAR: 'D', //一年中的第几天\n\t// \tPATTERN_DAY_OF_WEEK_IN_MONTH: 'F', //一月中的第几个星期(会把这个月总共过的天数除以7,不够准确，推荐用W)\n\t// \tPATTERN_WEEK_OF_YEAR: 'w', //一年中的第几个星期\n\t// \tPATTERN_WEEK_OF_MONTH: 'W', //一月中的第几星期(会根据实际情况来算)\n\t// \tPATTERN_AM_PM: 'a', //上下午标识\n\t// \tPATTERN_HOUR1: 'h', //12小时制 ，am/pm 中的小时数（1-12）\n\t// \tPATTERN_HOUR0: 'K', //和h类型\n\t// \tPATTERN_ZONE_NAME: 'z', //时区名\n\t// \tPATTERN_ZONE_VALUE: 'Z', //时区值\n\t// \tPATTERN_WEEK_YEAR: 'Y', //和y类型\n\t// \tPATTERN_ISO_DAY_OF_WEEK: 'u',\n\t// \tPATTERN_ISO_ZONE: 'X'\n\t// },\n\t// week: {\n\t// \t'ch': {\n\t// \t\t\"0\": \"\\u65e5\",\n\t// \t\t\"1\": \"\\u4e00\",\n\t// \t\t\"2\": \"\\u4e8c\",\n\t// \t\t\"3\": \"\\u4e09\",\n\t// \t\t\"4\": \"\\u56db\",\n\t// \t\t\"5\": \"\\u4e94\",\n\t// \t\t\"6\": \"\\u516d\"\n\t// \t},\n\t// \t'en': {\n\t// \t\t\"0\": \"Sunday\",\n\t// \t\t\"1\": \"Monday\",\n\t// \t\t\"2\": \"Tuesday\",\n\t// \t\t\"3\": \"Wednesday\",\n\t// \t\t\"4\": \"Thursday\",\n\t// \t\t\"5\": \"Friday\",\n\t// \t\t\"6\": \"Saturday\"\n\t// \t}\n\t// },\n\t/**\n\t* 时间戳转换成指定格式日期\n\t* @method timestampFormat\n\t* @for Date\n\t* @param {formats:String} formats为时间戳转换后的格式\n\t* 调用： timestamp.timestampFormat('Y-M-D H:I:S')\n\t* @return {String}}} 返回值为时间戳转换后的字符串\n\t*/\n\ttimestampFormat(timestamp = Date.now(), formats = 'Y-M-D H:I:S') {\n\t\tif (!timestamp) timestamp = Date.now()\n\t\ttimestamp = Number(timestamp)\n\t\tfunction zero(value) {\n\t\t\tif (value < 10) {\n\t\t\t\treturn '0' + value;\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\tlet myDate = timestamp ? new Date(timestamp) : new Date();\n\n\t\tlet year = myDate.getFullYear();\n\t\tlet month = zero(myDate.getMonth() + 1);\n\t\tlet day = zero(myDate.getDate());\n\n\t\tlet hour = zero(myDate.getHours());\n\t\tlet minite = zero(myDate.getMinutes());\n\t\tlet second = zero(myDate.getSeconds());\n\n\t\treturn formats.replace(/Y|M|D|H|I|S/ig, (matches) => {\n\n\t\t\treturn ({\n\t\t\t\tY: year,\n\t\t\t\tM: month,\n\t\t\t\tD: day,\n\t\t\t\tH: hour,\n\t\t\t\tI: minite,\n\t\t\t\tS: second\n\t\t\t})[matches];\n\t\t});\n\t},\n\t//是否闰年\n\tisLeapYear(year) {\n\t\treturn ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0);\n\t},\n\t//获取某个月的天数，从1开始\n\tgetDaysOfMonth(year, month) {\n\t\treturn [31, (this.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month - 1];\n\t},\n\n\t/**\n\t * 计算一个日期是当年的第几天\n\t * @param {Object} date为一个日期对象\n\t */\n\tdayOfTheYear(date) {\n\t\tlet obj = new Date(date);\n\t\tlet year = obj.getFullYear();\n\t\tlet month = obj.getMonth(); //从0开始\n\t\tlet days = obj.getDate();\n\t\tlet daysArr = [31, (this.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\t\tfor (let i = 0; i < month; i++) {\n\t\t\tdays += daysArr[i];\n\t\t}\n\t\treturn days;\n\t},\n\n\t//获得时区名和值\n\tgetZoneNameValue(dateObj) {\n\t\tlet date = new Date(dateObj);\n\t\tdate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n\t\tlet arr = date.toString().match(/([A-Z]+)([-+]\\d+:?\\d+)/);\n\t\tlet obj = {\n\t\t\t'name': arr[1],\n\t\t\t'value': arr[2]\n\t\t};\n\t\treturn obj;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/date/index.js","export default {\n  REGEXS: {\n    AllSpecialString: /\\u0060|\\u007e|\\u0021|\\u0040|\\u0023|\\u0024|\\u0025|\\u005e|\\u0026|\\u002a|\\u0028|\\u0029|\\u002d|\\u003d|\\u002b|\\u003c|\\u003e|\\u003f|\\u002c|\\u002e|\\u002f|\\u003a|\\u0022|\\u003b|\\u0027|\\u007b|\\u007d|\\u005b|\\u005d|\\u005c|\\u007c|\\uff01|\\u0040|\\u0023|\\uffe5|\\u0025|\\u2026|\\u2026|\\u0026|\\u002a|\\uff08|\\uff09|\\u2014|\\u2014|\\u002b|\\u300c|\\u300d|\\u3010|\\u3011|\\u300a|\\u300b|\\uff1f|\\uff1a|\\u201c|\\u201d|\\uff1b|\\u2018|\\u2019|\\u007c|\\u3001|\\u0020/,\n    SpecialString: /\\u0060|\\u0024|\\u0026|\\u002a|\\u005c|\\u003c|\\u003e/,\n    email: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n    url: /^((https|http|ftp|rtsp|mms)?:\\/\\/)[^\\s]+/,\n    password: /[\\w\\`~!@#$%^&*()-=_+{}\\[\\]:\";'<>?,./*-+.\\|]{8,12}$/,\n    code: /^[A-Za-z0-9]{4}$/,\n    drivingLicense: /^[0-9]{12}$/,\n    phone: /^1[345678]\\d{9}$/,\n    name: /^[\\u4E00-\\u9FA5A-Za-z]+$/,\n    EnString: /^[A-Za-z]+$/,\n    EnNumber: /^[A-Za-z0-9]+$/,\n    Number: /^[0-9]+$/,\n    CnString: /^[\\u4E00-\\u9FA5]+$/,\n    CnNumber: /^[\\u4E00-\\u9FA50-9]+$/,\n    RegisterNumber: /(^(?:(?![IOZSV])[\\dA-Z]){2}\\d{6}(?:(?![IOZSV])[\\dA-Z]){10}$)|(^\\d{15}$)/,\n    CarNo: /^[\\u4e00-\\u9fa5]{1}[A-Z]{1}[A-Z_0-9]{5,6}$/,\n    PersonNo: /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/,\n  },\n\n\n  // 检索字符串全部特殊字符\n  checkString (input) {\n    if (!input) {\n      return false\n    }\n    // 没有匹配到则返回null，非null则为合格字符串\n    if (!(input).match(this.REGEXS.AllSpecialString)) {\n      return true\n    } else {\n      return false\n    }\n  },\n\n  checkAge (input) {\n    console.log(input, 'input')\n    if(this.REGEXS.Number.test(input)) {\n      if(input < 18 || input > 70) {\n        return false\n      } else {\n        return true\n      }\n    } else {\n      return false\n    }\n  },\n\n  // 检索文本部分特殊字符\n  checkTextArea (input) {\n    // 没有匹配到则返回null，非null则为合格字符串\n    if (!(input).match(this.REGEXS.SpecialString)) {\n      return true\n    } else {\n      return false\n    }\n  },\n  //检索数字\n  checkNumber (input) {\n    return this.REGEXS.Number.test(input)\n  },\n\n  // 检索密码\n  checkPassword (input) {\n    return this.REGEXS.password.test(input)\n  },\n\n  // 检索4位验证码\n  checkCode (input) {\n    return this.REGEXS.code.test(input)\n  },\n\n  // 检索手机号\n  checkPhone (input) {\n    return this.REGEXS.phone.test(input)\n  },\n\n  // 检索姓名\n  checkCName (input) {\n    return this.REGEXS.name.test(input)\n  },\n\n  // 检索英文字符串\n  checkEnString (input) {\n    return this.REGEXS.EnString.test(input)\n  },\n\n  // 检索英文+数字字符串\n  checkEnNumber (input) {\n    return this.REGEXS.EnNumber.test(input)\n  },\n\n  // 检索中文字符串\n  checkCnString (input) {\n    return this.REGEXS.CnString.test(input)\n  },\n\n  // 检索中文+数字字符串\n  checkCnNumber (input) {\n    return this.REGEXS.CnNumber.test(input)\n  },\n\n  // 检索企业注册号\n  checkRegisterNumber (input) {\n    // 没有匹配到则返回null，非null则为合格字符串\n    return this.REGEXS.RegisterNumber.test(input)\n  },\n\n  // 检索URL\n  checkUrl (input) {\n    return this.REGEXS.url.test(input)\n  },\n\n   // 检索车牌号\n  checkCarNo (input) {\n    return this.REGEXS.CarNo.test(input)\n  },\n\n   // 检索身份证号\n  checkPersonCount (input) {\n    return this.REGEXS.PersonNo.test(input)\n  },\n\n  // 检索行驶证号\n  checkDrivingLicense (input) {\n    return this.REGEXS.drivingLicense.test(input)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/check/index.js","/*\n * @Author: houzhiqiag \n * @Date: 2019-10-23 10:54:35 \n * @Last Modified by: houzhiqiag\n * @Last Modified time: 2019-10-23 11:17:32\n */\n\nexport default {\n  REGEXS: {\n    URL_PATTERN: /^((https|http|ftp|rtsp|mms)?:\\/\\/)[^\\s]+/,\n    PARAMS_PATTERN: /(\\w+)=([^&#]*)/igm,\n  },\n  // 检索是否为合法URL\n  isUrl(input) {\n    return this.REGEXS.URL_PATTERN.test(input)\n  },\n  urlTransformParams(url) {\n    let matchStr = null;\n    let params = {};\n    while ((matchStr = this.REGEXS.PARAMS_PATTERN.exec(url)) != null) {\n      params[matchStr[1]] = matchStr[2];\n    }\n    return params;\n  },\n  // 路由传参转unicode码\n  urlEncode(params) {\n    return window.encodeURIComponent(JSON.stringify(params))\n  },\n  // 路由传参转解析unicode码\n  urlDecode(url) {\n    return JSON.parse(window.decodeURIComponent(url))\n  }\n  // isNum(input) {\n  //   return /^\\d+(\\.\\d+)?$/.test(input);\n  // }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/url/index.js","export default function loadScript (url, hasCallback) {\n  return createScript(url)\n  /**\n   * 创建script\n   * @param url\n   * @returns {Promise}\n   */\n  function createScript (url) {\n    let scriptElement = document.createElement('script')\n    document.body.appendChild(scriptElement)\n    let promise = new Promise((resolve, reject) => {\n      scriptElement.addEventListener('load', e => {\n        removeScript(scriptElement)\n        if (!hasCallback) {\n          resolve(e)\n        }\n      }, false)\n\n      scriptElement.addEventListener('error', e => {\n        removeScript(scriptElement)\n        reject(e)\n      }, false)\n\n      if (hasCallback) {\n        window.____callback____ = function () {\n          resolve()\n          window.____callback____ = null\n        }\n      }\n    })\n\n    if (hasCallback) {\n      url += '&callback=____callback____'\n    }\n\n    scriptElement.src = url\n\n    return promise\n  }\n\n  /**\n   * 移除script标签\n   * @param scriptElement script dom\n   */\n  function removeScript (scriptElement) {\n    document.body.removeChild(scriptElement)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/loadScript.js"],"sourceRoot":""}